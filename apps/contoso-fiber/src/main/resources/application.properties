# Contoso Configuration
contoso.retry.demo=0
## email, queue, demo
contoso.guide.request.service=email

# Spring Data JPA
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=validate

# Azure AD
spring.cloud.azure.active-directory.enabled=true
spring.cloud.azure.active-directory.credential.client-id=${AZURE_ACTIVE_DIRECTORY_CREDENTIAL_CLIENT_ID}
spring.cloud.azure.active-directory.credential.client-secret=${AZURE_ACTIVE_DIRECTORY_CREDENTIAL_CLIENT_SECRET}
spring.cloud.azure.active-directory.profile.tenant-id=${AZURE_ACTIVE_DIRECTORY_PROFILE_TENANT_ID}

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.ssl.enabled=true

# Spring Session to leverage Redis to back a web applicationâ€™s HttpSession
spring.session.redis.namespace=spring:session

# Spring Cloud Stream - Azure Service Bus
spring.cloud.azure.servicebus.namespace=${AZURE_SERVICEBUS_NAMESPACE}
spring.cloud.stream.bindings.consume-in-0.destination=${AZURE_SERVICEBUS_EMAIL_RESPONSE_QUEUE_NAME}
spring.cloud.stream.servicebus.bindings.supply-out-0.producer.entity-type=queue
spring.cloud.stream.bindings.consume-out-0.destination=${AZURE_SERVICEBUS_EMAIL_REQUEST_QUEUE_NAME}
spring.cloud.stream.servicebus.bindings.consume-out-0.producer.entity-type=queue
spring.cloud.function.definition=consume;

# Actuator
management.endpoints.web.exposure.include=metrics,health,info,retry,retryevents

#Circuit breaker
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false

#circuit breaker defaults
resilience4j.circuitbreaker.metrics.enabled=true
resilience4j.circuitbreaker.metrics.legacy.enabled=true
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=6
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=15s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10


#circuit breaker retry config
resilience4j.retry.metrics.enabled=true
resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=3s
resilience4j.retry.configs.default.retryExceptions[0]=org.springframework.web.client.HttpServerErrorException
resilience4j.retry.configs.default.retryExceptions[1]=java.lang.RuntimeException

#ServicePlan Circuit Breaker policy should use default config
resilience4j.circuitbreaker.instances.servicePlan.baseConfig=default

#ServicePlan retry policy should use default config
resilience4j.retry.instances.servicePlan.baseConfig=default
